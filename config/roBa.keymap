#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        single_quotes {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <20 21>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        tabcombo {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <18 19>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&kp Q           &kp W         &kp E         &kp R      &kp T                                        &kp Y            &kp U    &kp I  &kp O      &kp P
&kp A           &kp S         &kp D         &kp F      &kp G      &kp ESCAPE         &kp MINUS      &kp H            &lt 3 J  &kp K  &lt 5 L    &lt 2 DOUBLE_QUOTES
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C      &kp V      &kp SEMICOLON      &kp EQUAL      &kp B            &kp N    &kp M  &kp COMMA  &kp DOT
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &lt 3 TAB  &kp SPACE  &sl 1              &kp BACKSPACE  &mt LCTRL ENTER                             &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&trans  &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9                                      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp PIPE    &kp AMPERSAND
&trans  &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans               &kp GRAVE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AT           &kp DOLLAR  &kp HASH
&trans  &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_0      &kp BACKSLASH  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp CARET        &kp TILDE   &kp PERCENT
&trans  &trans  &kp KP_NUMBER_0  &trans           &trans           &kp BACKSPACE        &kp BACKSPACE  &kp RETURN                                                                &kp ASTERISK
            >;

            sensor-bindings = <&inc_dec_kp LC(PLUS) LC(MINUS)>;
        };

        ARROW {
            bindings = <
&trans          &mmv MOVE_UP     &kp N7        &kp N8   &kp N9                                         &trans               &kp LC(C)       &kp UP_ARROW     &kp LC(V)  &trans
&mmv MOVE_LEFT  &mmv MOVE_RIGHT  &kp N4        &kp N5   &kp N6  &trans             &kp LC(LS(TAB))     &kp HOME             &kp LEFT        &kp RIGHT_ARROW  &trans     &trans
&kp LEFT_SHIFT  &mmv MOVE_DOWN   &kp N1        &kp N2   &kp N3  &kp N0             &kp LC(TAB)         &kp END              &kp DOWN_ARROW  &trans           &trans     &trans
&kp LCTRL       &kp LEFT_WIN     &kp LEFT_ALT  &kp TAB  &trans  &kp BACKSPACE      &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)                                              &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        FUNCTION {
            bindings = <
&kp LANG1  &trans     &trans  &trans          &bt BT_SEL 0                                     &kp F1           &kp F2  &kp F3  &kp F4  &kp F5
&kp LANG2  &kp LANG2  &trans  &kp LANGUAGE_1  &bt BT_SEL 1  &bt BT_CLR      &kp F13            &kp F6           &kp F7  &kp F8  &kp F9  &kp F10
&trans     &trans     &trans  &trans          &bt BT_SEL 2  &trans          &trans             &trans           &trans  &trans  &trans  &kp F11
&trans     &trans     &trans  &trans          &trans        &trans          &kp C_VOLUME_DOWN  &kp C_VOLUME_UP                          &kp F12
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &mkp MB3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans          &trans  &kp N7  &kp N8  &kp N9                      &trans  &trans    &mkp MB3  &trans  &trans
&trans          &trans  &kp N4  &kp N5  &kp N6  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &trans  &trans
&kp LEFT_SHIFT  &trans  &kp N1  &kp N2  &kp N3  &kp N0      &trans  &trans  &trans    &trans    &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };
    };
};
